----------------------------------------
Begin PBS Prologue Mon Oct 21 18:20:43 EDT 2013 1382394043
Job ID:		5204[22].hades
Username:	gulcehre
Group:		lisa
Nodes:		ngpu-a4-05
End PBS Prologue Mon Oct 21 18:20:43 EDT 2013 1382394043
----------------------------------------
book_unstarted_dct retrieved,  Dict{u'p_lr_scale': 0.676960835599755, u'jobman.experiment': u'powconvnet.train_pow.experiment', u'max_col_norm2': 1.8365, u'jobman.sql.priority': 1.0, u'yaml_string': u'!obj:pylearn2.train.Train {\n    dataset: &train !obj:pylearn2.datasets.tfd.TFD {\n        which_set: \'train\',\n        one_hot: 1,\n        center: 1,\n        preprocessor: !obj:pylearn2.datasets.preprocessing.Pipeline {\n            items: [ \n                       !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {}\n                   ]\n        }\n    },\n    model: !obj:pylearn2.models.mlp.MLP {\n        batch_size: 128,\n        layers: [\n                !obj:pylearn2.models.powerup.Powerup {\n                     layer_name: \'h0\',\n                     num_units: %(powerup_nunits)i,\n                     num_pieces: %(powerup_npieces)i,\n                     post_bias: True,\n                     p_mean: 1.0,\n                     W_lr_scale: %(W_lr_scale)f,\n                     p_lr_scale: %(p_lr_scale)f,\n                     max_col_norm: %(max_col_norm)f,\n                     batch_size: 128,\n                     irange: .005,\n                 },\n                 !obj:pylearn2.models.mlp.Softmax {\n                     max_col_norm: %(max_col_norm2)f,\n                     layer_name: \'y\',\n                     n_classes: 7,\n                     irange: .005\n                 }\n                ],\n        nvis: 2304\n    },\n    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {\n        learning_rate: %(lr_rate)f,\n        monitoring_dataset:\n            {\n                \'train\' : *train,\n                \'valid\' : !obj:pylearn2.datasets.tfd.TFD {\n                              which_set: \'valid\',\n                              one_hot: 1,\n                              center: 1,\n                              preprocessor: !obj:pylearn2.datasets.preprocessing.Pipeline {\n                                  items: [\n                                       !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {}\n                                   ]\n                              }\n                          },\n                \'test\' : !obj:pylearn2.datasets.tfd.TFD {\n                              which_set: \'test\',\n                              one_hot: 1,\n                              center: 1,\n                              preprocessor: !obj:pylearn2.datasets.preprocessing.Pipeline {\n                                  items: [\n                                       !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {}\n                                   ]\n                              }\n                          }\n            },\n        cost: !obj:pylearn2.costs.cost.SumOfCosts { \n            costs: [\n                !obj:pylearn2.costs.cost.MethodCost {\n                    method: \'cost_from_X\'\n                },\n                !obj:pylearn2.models.mlp.WeightDecay {\n                    coeffs: [ %(l2_pen)f, %(l2_pen2)f ]\n                }\n            ],\n        },\n       termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {\n            channel_name: "valid_y_misclass",\n            prop_decrease: 0.,\n            N: 100\n        },\n    },\n    extensions: [\n        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {\n             channel_name: \'valid_y_misclass\',\n             save_path: "%(save_path)sbest.pkl"\n        },\n        !obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {\n            start: 1,\n            saturate: 250,\n            decay_factor: %(decay_factor)f\n        }\n    ],\n    save_path: "%(save_path)slast.pkl",\n    save_freq: 5\n}\n', u'powerup_npieces': 8, u'jobman.hash': -3342334001342203887, u'l2_pen2': 0.0, u'decay_factor': 0.0195376093822836, u'lr_rate': 0.0116015530173997, u'max_col_norm': 1.9365, u'jobman.status': 0, u'W_lr_scale': 0.929319379498971, u'save_path': u'./abcdefg_', u'l2_pen': 0.000595213148510031, u'powerup_nunits': 240}
caught exception (TransactionRollbackError) could not serialize access due to concurrent update
 'UPDATE powerup_tfd_1layer_finer_large_no_momtrial SET status=%(status)s WHERE powerup_tfd_1layer_finer_large_no_momtrial.id = %(powerup_tfd_1layer_finer_large_no_momtrial_id)s' {'status': 1, 'powerup_tfd_1layer_finer_large_no_momtrial_id': 14}
another process stole our dct. Waiting 2.935486 secs
waiting for 2 second
book_unstarted_dct retrieved,  Dict{u'p_lr_scale': 0.98118880391405, u'jobman.experiment': u'powconvnet.train_pow.experiment', u'max_col_norm2': 1.8365, u'jobman.sql.priority': 1.0, u'yaml_string': u'!obj:pylearn2.train.Train {\n    dataset: &train !obj:pylearn2.datasets.tfd.TFD {\n        which_set: \'train\',\n        one_hot: 1,\n        center: 1,\n        preprocessor: !obj:pylearn2.datasets.preprocessing.Pipeline {\n            items: [ \n                       !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {}\n                   ]\n        }\n    },\n    model: !obj:pylearn2.models.mlp.MLP {\n        batch_size: 128,\n        layers: [\n                !obj:pylearn2.models.powerup.Powerup {\n                     layer_name: \'h0\',\n                     num_units: %(powerup_nunits)i,\n                     num_pieces: %(powerup_npieces)i,\n                     post_bias: True,\n                     p_mean: 1.0,\n                     W_lr_scale: %(W_lr_scale)f,\n                     p_lr_scale: %(p_lr_scale)f,\n                     max_col_norm: %(max_col_norm)f,\n                     batch_size: 128,\n                     irange: .005,\n                 },\n                 !obj:pylearn2.models.mlp.Softmax {\n                     max_col_norm: %(max_col_norm2)f,\n                     layer_name: \'y\',\n                     n_classes: 7,\n                     irange: .005\n                 }\n                ],\n        nvis: 2304\n    },\n    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {\n        learning_rate: %(lr_rate)f,\n        monitoring_dataset:\n            {\n                \'train\' : *train,\n                \'valid\' : !obj:pylearn2.datasets.tfd.TFD {\n                              which_set: \'valid\',\n                              one_hot: 1,\n                              center: 1,\n                              preprocessor: !obj:pylearn2.datasets.preprocessing.Pipeline {\n                                  items: [\n                                       !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {}\n                                   ]\n                              }\n                          },\n                \'test\' : !obj:pylearn2.datasets.tfd.TFD {\n                              which_set: \'test\',\n                              one_hot: 1,\n                              center: 1,\n                              preprocessor: !obj:pylearn2.datasets.preprocessing.Pipeline {\n                                  items: [\n                                       !obj:pylearn2.datasets.preprocessing.GlobalContrastNormalization {}\n                                   ]\n                              }\n                          }\n            },\n        cost: !obj:pylearn2.costs.cost.SumOfCosts { \n            costs: [\n                !obj:pylearn2.costs.cost.MethodCost {\n                    method: \'cost_from_X\'\n                },\n                !obj:pylearn2.models.mlp.WeightDecay {\n                    coeffs: [ %(l2_pen)f, %(l2_pen2)f ]\n                }\n            ],\n        },\n       termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {\n            channel_name: "valid_y_misclass",\n            prop_decrease: 0.,\n            N: 100\n        },\n    },\n    extensions: [\n        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {\n             channel_name: \'valid_y_misclass\',\n             save_path: "%(save_path)sbest.pkl"\n        },\n        !obj:pylearn2.training_algorithms.sgd.LinearDecayOverEpoch {\n            start: 1,\n            saturate: 250,\n            decay_factor: %(decay_factor)f\n        }\n    ],\n    save_path: "%(save_path)slast.pkl",\n    save_freq: 5\n}\n', u'powerup_npieces': 16, u'jobman.hash': -9003196971683221021, u'l2_pen2': 0.0, u'decay_factor': 0.0313251466672947, u'lr_rate': 0.107710505603677, u'max_col_norm': 1.9365, u'jobman.status': 0, u'W_lr_scale': 0.516268317891116, u'save_path': u'./abcdefg_', u'l2_pen': 8.54543215265209e-05, u'powerup_nunits': 240}
Selected job id=24 in table=powerup_tfd_1layer_finer_large_no_mom in db=gulcehrc_db
----------------------------------------
Begin PBS Epilogue Mon Oct 21 18:29:47 EDT 2013 1382394587
Job ID:		5204[22].hades
Username:	gulcehre
Group:		lisa
Job Name:	dbi_d1f3b0e21b2-22
Session:	10648
Limits:		neednodes=1:ppn=1,nodes=1:ppn=1,walltime=47:59:59
Resources:	cput=00:06:55,mem=528492kb,vmem=47676780kb,walltime=00:08:59
Queue:		courte
Account:		
Nodes:	ngpu-a4-05
Killing leftovers...

End PBS Epilogue Mon Oct 21 18:29:47 EDT 2013 1382394587
----------------------------------------
